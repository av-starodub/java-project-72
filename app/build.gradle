import static sun.security.util.Debug.println

plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'io.freefair.lombok' version '8.4'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'se.patrikerdes.use-latest-versions' version '0.2.18'
    id 'com.github.ben-manes.versions' version '0.51.0'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

group 'hexlet.code'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    options.release = 17
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'hexlet.code.App'
}

dependencyManagement {
    dependencies {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.1.1"
        }
    }
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
    resolutionStrategy {

    }
}

task managedVersions {
    doLast {
        dependencyManagement.managedVersions.each {
            println it
        }
    }
}

dependencies {
    implementation 'ch.qos.logback:logback-classic'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation(
            'io.javalin:javalin-bundle:6.1.3',
            'io.javalin:javalin:6.1.3',
            'io.javalin:javalin-rendering:6.1.3',
            'io.javalin:javalin-testtools:6.1.3'
    )
    implementation(
            'com.h2database:h2',
            'org.postgresql:postgresql:42.7.2',
            "org.flywaydb:flyway-core:10.12.0",
            'com.zaxxer:HikariCP'
    )
    runtimeOnly 'org.flywaydb:flyway-database-postgresql:10.12.0'

    implementation(
            "gg.jte:jte:3.1.10",
            'org.webjars:bootstrap:4.5.0'
    )

    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine',
            'org.junit.platform:junit-platform-launcher'
    )
    testImplementation(
            platform('org.junit:junit-bom:5.10.2'),
            'com.konghq:unirest-java:3.14.1',
            'org.junit.jupiter:junit-jupiter-params',
            'org.assertj:assertj-core'
    )
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}

testlogger {
    showStandardStreams true
}

jacoco {
    toolVersion = "0.8.8"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

checkstyle {
    toolVersion '9.2.1'
}

task stage(dependsOn: ['clean', 'installDist'])
installDist.mustRunAfter clean
